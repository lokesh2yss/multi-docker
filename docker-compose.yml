version: '3'
services:
  postgres:
    build: 
      context: ./postgres
      dockerfile: Dockerfile.dev
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: asha3
      POSTGRES_DB: asha3-db
      POSTGRES_PASSWORD: postgres_password
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - my-network

  redis-server:
    image: "redis"
    container_name: redis-server
    restart: unless-stopped
    tty: true
    ports:
      - "6379:6379"
    networks:
      - my-network

  nginx:
    build: 
      dockerfile: Dockerfile.dev
      context: ./nginx
    restart: always
    ports:
      - "8090:80"
    networks:
      - my-network

  api:
    depends_on:
      - postgres
    build: 
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: api
    restart: unless-stopped
    tty: true
    environment:
      REDIS_HOST: redis-server
      REDIS_PORT: 6379
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: asha3
      PGPASSWORD: postgres_password
      PGDATABASE: asha3-db
    volumes:
      - /app/node_modules
      - ./server:/app
    networks:
      - my-network
    ports:
      - "5000:5000"
    command: ["npm","run","dev"]

  client:
    build: 
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: client
    restart: unless-stopped
    tty: true
    volumes: 
      - /app/node_modules
      - ./client:/app
    ports:
      - "3000:3000"
    networks:
      - my-network
    command: ["npm","run","start"]
  
  worker:
    build: 
      context: ./worker
      dockerfile: Dockerfile.dev
    container_name: worker
    restart: unless-stopped
    tty: true
    environment:
      REDIS_HOST: redis-server
      REDIS_PORT: 6379
    volumes:
      - /app/node_modules
      - ./worker:/app 
    networks:
      - my-network
    command: ["npm","run","dev"]
      
#Volumes
volumes:
  pgdata:
      driver: local

#Networks
networks:
  my-network:
    driver: bridge
